apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: %NAMESPACE%
  labels:
    app: skojjt
  name: skojjt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: skojjt
  template:
    metadata:
      labels:
        app: skojjt
    spec:
      containers:
        - name: skojjt
          image: %IMAGE%
          env:
            - name: MONGO_URI
              value: "mongodb://%s:%s@skojjt.mongo.cosmos.azure.com:10255/?ssl=true&retrywrites=false&replicaSet=globaldb&maxIdleTimeMS=120000&appName=@skojjt@"
            - name: MONGO_DATABASE
              value: "%NAMESPACE%"
            - name: MONGO_USER
              value: "skojjt"
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: dbpass
                  name: dbpass
            - name: HOST_NAME
              value: "%NAMESPACE%.webservices.scouterna.net"
            - name: JWT_URL
              value: "https://scoutid.se/jwt/jwt.php"
            - name: JWT_PUBLIC_KEY_FILE
              value: "/etc/jwtkeys/jwt.live.pub.key"
            - name: JWT_SOURCE_HOST
              value: "www.scoutnet.se"
            - name: SCOUTNET_IMPORT_HOST
              value: "www.scoutnet.se"
          ports:
            - containerPort: 80
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  namespace: %NAMESPACE%
  name: skojjt
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: skojjt
---
# This Ingress definition will cause cert-manager to automatically request
# a certificate from Let's Encrypt for the specified hostname.
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: %NAMESPACE%
  name: skojjt
  annotations:
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - secretName: %NAMESPACE%-webservices-scouterna-net
      hosts:
        - %NAMESPACE%.webservices.scouterna.net
  rules:
    - host: %NAMESPACE%.webservices.scouterna.net
      http:
        paths:
          - path: /
            backend:
              serviceName: skojjt
              servicePort: 80
---
# This KongIngress definition (with the same name as the Ingress above)
# makes Kong automatically redirect all requests to https using a 302
# status code.
apiVersion: configuration.konghq.com/v1
kind: KongIngress
metadata:
  namespace: %NAMESPACE%
  name: skojjt
route:
  protocols:
    - https
  https_redirect_status_code: 301
