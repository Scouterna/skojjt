"use strict";var __awaiter=function(e,a,c,i){return new(c||(c=Promise))(function(t,n){function r(e){try{o(i.next(e))}catch(e){n(e)}}function s(e){try{o(i.throw(e))}catch(e){n(e)}}function o(e){var n;e.done?t(e.value):(n=e.value,n instanceof c?n:new c(function(e){e(n)})).then(r,s)}o((i=i.apply(e,a||[])).next())})},__generator=function(t,r){var s,o,a,e,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return e={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function n(n){return function(e){return function(n){if(s)throw new TypeError("Generator is already executing.");for(;c;)try{if(s=1,o&&(a=2&n[0]?o.return:n[0]?o.throw||((a=o.return)&&a.call(o),0):o.next)&&!(a=a.call(o,n[1])).done)return a;switch(o=0,a&&(n=[2&n[0],a.value]),n[0]){case 0:case 1:a=n;break;case 4:return c.label++,{value:n[1],done:!1};case 5:c.label++,o=n[1],n=[0];continue;case 7:n=c.ops.pop(),c.trys.pop();continue;default:if(!(a=0<(a=c.trys).length&&a[a.length-1])&&(6===n[0]||2===n[0])){c=0;continue}if(3===n[0]&&(!a||n[1]>a[0]&&n[1]<a[3])){c.label=n[1];break}if(6===n[0]&&c.label<a[1]){c.label=a[1],a=n;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(n);break}a[2]&&c.ops.pop(),c.trys.pop();continue}n=r.call(t,c)}catch(e){n=[6,e],o=0}finally{s=a=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,e])}}},_this=void 0;document.addEventListener("DOMContentLoaded",function(){return __awaiter(_this,void 0,void 0,function(){var n,t,r,s,o,a,c,i,u,l,p,f,d;return __generator(this,function(e){switch(e.label){case 0:console.log("script.ts loaded"),n=document.getElementById("ping"),t=document.getElementById("dbcheck"),r=fetch("/ping"),e.label=1;case 1:return e.trys.push([1,3,,4]),[4,r];case 2:return e.sent(),[3,4];case 3:return s=e.sent(),console.error(s),n.innerText="Rest-API no respondse.",[2];case 4:return[4,r];case 5:if(!(o=e.sent()).ok)return n.innerText="Rest-API bad response status.",[2];a=o.json(),e.label=6;case 6:return e.trys.push([6,8,,9]),[4,a];case 7:return e.sent(),[3,9];case 8:return c=e.sent(),console.error(c),n.innerText="Rest-API invalid response.",[2];case 9:return[4,a];case 10:if("pong"!==e.sent().ping)return n.innerText="Rest-API bad response.",[2];n.innerText="Rest-API is working",t.innerText="Testing db-connection?",i=fetch("/api/dbtest"),e.label=11;case 11:return e.trys.push([11,13,,14]),[4,i];case 12:return e.sent(),[3,14];case 13:return u=e.sent(),console.error(u),t.innerText="DB-test no response",[2];case 14:return[4,i];case 15:if(!(l=e.sent()).ok)return t.innerText="DB-test bad response status.",[2];p=l.json(),e.label=16;case 16:return e.trys.push([16,18,,19]),[4,p];case 17:return e.sent(),[3,19];case 18:return f=e.sent(),console.error(f),t.innerText="DB-test invalid response",[2];case 19:return[4,p];case 20:return!(d=e.sent()).ok||isNaN(d.count)?t.innerText="DB-test bad response":t.innerText="Database connection is working, counter = "+d.count+".",[2]}})})});
//# sourceMappingURL=es5.js.map
